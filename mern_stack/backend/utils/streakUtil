const calculateAndUpdateStreaks = (habit) => {
    const completions = habit.completions
        .filter((entry) => entry.completed)
        .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());
    let currentStreak = 0;
    let longestStreak = 0;

    for (let i = 0; i < completions.length; i++) {
        if (i === 0) {
            // Always start the streak at 1 for the first completion
            currentStreak = completions[i].completed ? 1 : 0;
            longestStreak = Math.max(longestStreak, currentStreak);
        } 
            else if (completions[i].completed &&
                new Date(completions[i].date).toDateString() !== new Date(completions[i - 1].date).toDateString() &&
                new Date(completions[i].date).getTime() - new Date(completions[i - 1].date).getTime() === 86400000) {
            // Increment streak if the gap between completions is <= 24 hours
            currentStreak++;
            longestStreak = Math.max(longestStreak, currentStreak);
        } else {
            // Reset streak to 1 for non-consecutive completions
            currentStreak = completions[i].completed ? 1 : 0;
        }
    }
    
    habit.currentStreak = currentStreak;
    habit.longestStreak = longestStreak;
    console.log('Current Streak:', habit.currentStreak);
    console.log('Longest Streak:', habit.longestStreak);
};

module.exports = { calculateAndUpdateStreaks };

